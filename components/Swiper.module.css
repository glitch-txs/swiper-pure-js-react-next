.container{
    position: relative;
    /* Add any height and width you want for your swiper */
    width: 100%;
    max-width: 1000px;
    height: 250px;

    /* Needed overflow hidden - comment this line to see how the swiper works internaly */
    overflow: hidden;
}

.slideContainer{
    /* Display flex will align the slides elements in one row */
    display: flex;

    /* Width is calculated in the tsx file, it multiplies 100% * the number of slider elements inside the container,
    this way THIS container will take the width of the sum of all children elements */

    /* DO NOT USE Width HERE */

    height: 100%;

    transition:all 0.3s ease;
    z-index: 10;
}

.slide{
    /* responsive width */
    position: relative;
    width: 100%;
    
    /* This will prevent artefacts when dragging the slide,
     if you need to add a button or something interactive inside a slide
     you can add 'pointer-events: all' to that particular Class */
    pointer-events: none;
    user-select: none;
}

/* Content CSS - Not Important */
.slide img{
    object-fit: cover;
    width: 100%;
}

.textSlide{
    width: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    padding: 10px;
    text-align: center;

    position: absolute;
    bottom: 0;
}

/* Controls CSS - Not Important (They trigger the function to move the slides) */
.controlsContainer{
    position: absolute;
    top:0;
    z-index: 20;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.controlsContainer button{
    position: absolute;
    pointer-events: all;
    cursor: pointer;

    background: none;
    border: 0;
    outline: none;
    width: 50px;
    height: 100%;
    transition: all .3s ease;
}

.controlsContainer button:first-child{
    left: 0;
}

.controlsContainer button:last-child{
    right: 0;
}

.goToContainer{
    margin-top: 100px;
    display: flex;
    gap: 10px;
}

.goToContainer button{
    width: 100px;
    height: 30px;
    cursor: pointer;
    border: none;
}

@media (max-width:472px){
    .goToContainer{
        flex-direction: column;
    }
}